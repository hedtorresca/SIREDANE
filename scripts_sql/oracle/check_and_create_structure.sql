-- Script para verificar y crear estructura de tablas SIRE en Oracle
-- Este script verifica si las tablas existen y las crea si no existen

-- Configurar el esquema por defecto
-- NOTA: Cambiar SIRE_STA por tu esquema real
ALTER SESSION SET CURRENT_SCHEMA = SIRE_STA;

-- 1. Verificar si existe la tabla control_ids_generados
DECLARE
    table_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO table_exists
    FROM user_tables 
    WHERE table_name = 'CONTROL_IDS_GENERADOS';
    
    IF table_exists = 0 THEN
        EXECUTE IMMEDIATE '
        CREATE TABLE control_ids_generados (
            id                        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            id_estadistico            VARCHAR2(100) UNIQUE,
            tipo_entidad              VARCHAR2(2) CHECK (tipo_entidad IN (''01'', ''02'')),
            tipo_documento            VARCHAR2(50),
            numero_documento          VARCHAR2(50),
            fecha_generacion          TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            estado                    VARCHAR2(20) DEFAULT ''generado'' CHECK (estado IN (''generado'', ''utilizado'', ''error'')),
            observaciones             CLOB,
            load_datetime             TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )';
        
        -- Crear índices
        EXECUTE IMMEDIATE 'CREATE INDEX idx_control_ids_tipo_entidad ON control_ids_generados(tipo_entidad)';
        EXECUTE IMMEDIATE 'CREATE INDEX idx_control_ids_documento ON control_ids_generados(tipo_documento, numero_documento)';
        EXECUTE IMMEDIATE 'CREATE INDEX idx_control_ids_fecha ON control_ids_generados(fecha_generacion)';
        EXECUTE IMMEDIATE 'CREATE INDEX idx_control_ids_estado ON control_ids_generados(estado)';
        
        -- Comentarios
        EXECUTE IMMEDIATE 'COMMENT ON TABLE control_ids_generados IS ''Tabla de control para IDs estadísticos generados por la API''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN control_ids_generados.id_estadistico IS ''ID estadístico generado (01+consecutivo para personas, 02+consecutivo para empresas)''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN control_ids_generados.tipo_entidad IS ''Tipo de entidad: 01=Persona, 02=Empresa''';
        EXECUTE IMMEDIATE 'COMMENT ON COLUMN control_ids_generados.estado IS ''Estado del ID: generado, utilizado, error''';
        
        DBMS_OUTPUT.PUT_LINE('✅ Tabla control_ids_generados creada exitosamente');
    ELSE
        DBMS_OUTPUT.PUT_LINE('ℹ️ Tabla control_ids_generados ya existe');
    END IF;
END;
/

-- 2. Verificar si existe la tabla raw_obt_personas
DECLARE
    table_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO table_exists
    FROM user_tables 
    WHERE table_name = 'RAW_OBT_PERSONAS';
    
    IF table_exists = 0 THEN
        EXECUTE IMMEDIATE '
        CREATE TABLE raw_obt_personas (
            id                        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            id_estadistico            VARCHAR2(100),
            tipo_documento            VARCHAR2(50),
            numero_documento          VARCHAR2(50),
            primer_nombre             VARCHAR2(100),
            segundo_nombre            VARCHAR2(100),
            primer_apellido           VARCHAR2(100),
            segundo_apellido          VARCHAR2(100),
            fecha_nacimiento          DATE,
            sexo_an                   VARCHAR2(50),
            codigo_municipio_nacimiento VARCHAR2(50),
            codigo_pais_nacimiento    VARCHAR2(3),
            fecha_defuncion           DATE,
            load_datetime             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            id_log_etl                NUMBER
        )';
        
        -- Crear índices
        EXECUTE IMMEDIATE 'CREATE INDEX idx_obt_personas_id_estadistico ON raw_obt_personas(id_estadistico)';
        EXECUTE IMMEDIATE 'CREATE INDEX idx_obt_personas_documento ON raw_obt_personas(tipo_documento, numero_documento)';
        
        -- Comentarios
        EXECUTE IMMEDIATE 'COMMENT ON TABLE raw_obt_personas IS ''Tabla OBT para personas con IDs estadísticos''';
        
        DBMS_OUTPUT.PUT_LINE('✅ Tabla raw_obt_personas creada exitosamente');
    ELSE
        DBMS_OUTPUT.PUT_LINE('ℹ️ Tabla raw_obt_personas ya existe');
    END IF;
END;
/

-- 3. Verificar si existe la tabla raw_obt_empresas
DECLARE
    table_exists NUMBER;
BEGIN
    SELECT COUNT(*) INTO table_exists
    FROM user_tables 
    WHERE table_name = 'RAW_OBT_EMPRESAS';
    
    IF table_exists = 0 THEN
        EXECUTE IMMEDIATE '
        CREATE TABLE raw_obt_empresas (
            id                        NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
            id_estadistico            VARCHAR2(100),
            razon_social              VARCHAR2(250),
            tipo_documento            VARCHAR2(50),
            numero_documento          VARCHAR2(50),
            digito_verificacion       VARCHAR2(10),
            codigo_camara             VARCHAR2(50),
            camara_comercio           VARCHAR2(100),
            matricula                 VARCHAR2(50),
            fecha_matricula           DATE,
            fecha_renovacion          DATE,
            ultimo_ano_renovado       NUMBER,
            fecha_vigencia            DATE,
            fecha_cancelacion         DATE,
            codigo_tipo_sociedad      VARCHAR2(50),
            tipo_sociedad             VARCHAR2(100),
            codigo_organizacion_juridica VARCHAR2(50),
            organizacion_juridica     VARCHAR2(100),
            codigo_estado_matricula   VARCHAR2(50),
            estado_matricula          VARCHAR2(100),
            representante_legal       VARCHAR2(200),
            num_identificacion_representante_legal VARCHAR2(50),
            clase_identificacion_rl   VARCHAR2(50),
            fecha_actualizacion       TIMESTAMP,
            load_datetime             TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
            id_log_etl                NUMBER
        )';
        
        -- Crear índices
        EXECUTE IMMEDIATE 'CREATE INDEX idx_obt_empresas_id_estadistico ON raw_obt_empresas(id_estadistico)';
        EXECUTE IMMEDIATE 'CREATE INDEX idx_obt_empresas_documento ON raw_obt_empresas(tipo_documento, numero_documento)';
        
        -- Comentarios
        EXECUTE IMMEDIATE 'COMMENT ON TABLE raw_obt_empresas IS ''Tabla OBT para empresas con IDs estadísticos''';
        
        DBMS_OUTPUT.PUT_LINE('✅ Tabla raw_obt_empresas creada exitosamente');
    ELSE
        DBMS_OUTPUT.PUT_LINE('ℹ️ Tabla raw_obt_empresas ya existe');
    END IF;
END;
/

-- 4. Verificar estructura y mostrar resumen
DECLARE
    control_count NUMBER;
    personas_count NUMBER;
    empresas_count NUMBER;
BEGIN
    -- Contar tablas existentes
    SELECT COUNT(*) INTO control_count FROM user_tables WHERE table_name = 'CONTROL_IDS_GENERADOS';
    SELECT COUNT(*) INTO personas_count FROM user_tables WHERE table_name = 'RAW_OBT_PERSONAS';
    SELECT COUNT(*) INTO empresas_count FROM user_tables WHERE table_name = 'RAW_OBT_EMPRESAS';
    
    DBMS_OUTPUT.PUT_LINE('📊 RESUMEN DE ESTRUCTURA:');
    DBMS_OUTPUT.PUT_LINE('   - control_ids_generados: ' || CASE WHEN control_count > 0 THEN '✅ Existe' ELSE '❌ No existe' END);
    DBMS_OUTPUT.PUT_LINE('   - raw_obt_personas: ' || CASE WHEN personas_count > 0 THEN '✅ Existe' ELSE '❌ No existe' END);
    DBMS_OUTPUT.PUT_LINE('   - raw_obt_empresas: ' || CASE WHEN empresas_count > 0 THEN '✅ Existe' ELSE '❌ No existe' END);
    
    IF control_count > 0 AND personas_count > 0 AND empresas_count > 0 THEN
        DBMS_OUTPUT.PUT_LINE('🎉 Todas las tablas están listas para usar');
    ELSE
        DBMS_OUTPUT.PUT_LINE('⚠️ Algunas tablas faltan, revisar errores anteriores');
    END IF;
END;
/

COMMIT;
